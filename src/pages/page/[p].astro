---
import type { GetStaticPaths } from "astro";
import { getCollection } from "astro:content";
import BaseHead from "../../components/BaseHead.astro";
import Footer from "../../components/Footer.astro";
import HomeHeader from "../../components/HomeHeader.astro";
import MaxWidthContainer from "../../components/MaxWidthContainer.astro";

export const getStaticPaths = (async () => {
  const posts = await getCollection("post");
  const countPerPage = 10;
  const pageSize = Math.ceil(posts.length / countPerPage);
  const chunked = Array.from({ length: pageSize }, (_, i) =>
    posts
      .sort((a, b) => b.data.date.getTime() - a.data.date.getTime())
      .slice(i * countPerPage, i * countPerPage + countPerPage)
  );

  return chunked.map((chunk, index) => ({
    params: { p: (index + 1).toString() },
    props: { chunk, hasNext: index + 1 < chunked.length, page: index + 1 },
  }));
}) satisfies GetStaticPaths;

const { chunk, hasNext, page } = Astro.props;
---

<html lang="ja">
  <head>
    <BaseHead title={""} description={""} />
  </head>
  <body>
    <HomeHeader />
    <MaxWidthContainer>
      <main>
        {
          chunk.map((post) => (
            <a href={`/post/${post.slug}`}>
              <article>
                <p>{post.data.title}</p>
              </article>
            </a>
          ))
        }
        {hasNext && <a href={`/page/${page + 1}`}>次へ</a>}
      </main>
    </MaxWidthContainer>
    <Footer />
  </body>
</html>
