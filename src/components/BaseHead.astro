---
type Props = {
  title: string;
  description: string;
};

// const canonicalURL = new URL(Astro.url.pathname, Astro.site);

const { title, description } = Astro.props;
---

<!-- Global Metadata -->
<meta charset="utf-8" />
<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
<meta name="viewport" content="width=device-width,initial-scale=1" />

<!-- canonical URL -->
<!-- TODO: canonical URL -->
<!-- <link rel="canonical" href={canonicalURL} /> -->

<!-- primary meta -->
<title>{title}</title>
<meta name="description" content={description} />

<!-- open graph -->
<meta property="og:type" content="website" />
<meta property="og:url" content={Astro.url} />
<meta property="og:title" content={title} />
<meta property="og:description" content={description} />
<!-- TODO: og image -->
<!-- <meta property="og:image" content={new URL(image, Astro.url)} /> -->

<!-- Twitter -->
<meta property="twitter:card" content="summary_large_image" />
<meta property="twitter:url" content={Astro.url} />
<meta property="twitter:title" content={title} />
<meta property="twitter:description" content={description} />
<!-- TODO: og image -->
<!-- <meta property="twitter:image" content={new URL(image, Astro.url)} /> -->
<meta name="title" content={title} />
<style is:global>
  @layer {
    :root {
      --color-primary: 147 42 181;
      --color-primary-inverted: 255 255 255;
      --color-text: 35 35 35;
      --color-background: 255 255 255;
    }
  }

  /* Box sizing rules */
  *,
  *::before,
  *::after {
    box-sizing: border-box;
  }

  /* Remove default styles for list */
  ul[class],
  ol[class] {
    padding: 0;
    list-style: none;
  }

  li {
    margin: 0 0 0.25rem;
  }

  /* Remove default margin */
  body,
  h1,
  h2,
  h3,
  h4,
  p,
  ul[class],
  ol[class],
  li,
  figure,
  figcaption,
  blockquote,
  dl,
  dd {
    margin: 0;
  }

  /* A elements that don't have a class get default styles */
  a:not([class]) {
    text-decoration-skip-ink: auto;
  }

  /* Make images easier to work with */
  img {
    max-width: 100%;
    display: block;
  }

  /* Natural flow and rhythm in articles by default */
  article > * + * {
    margin-top: 1em;
  }

  /* Inherit fonts for inputs and buttons */
  input,
  button,
  textarea,
  select {
    font: inherit;
  }

  /* Base document */
  html {
    font-family: system-ui, "Segoe UI", Roboto, Helvetica, Arial, sans-serif,
      "Apple Color Emoji", "Segoe UI Emoji";
    line-height: 1.5;
    -webkit-text-size-adjust: 100%;
    -moz-tab-size: 4;
    tab-size: 4;
    height: 100%;
  }

  ::selection {
    color: rgb(var(--color-primary-inverted));
    background: rgb(var(--color-primary));
  }

  body {
    color: rgb(var(--color-text));
    background: rgb(var(--color-background));
    transition: background-color 0.3s ease;
  }

  a {
    color: rgb(var(--color-primary));
    background-color: transparent;
    word-break: break-all;
    text-decoration: underline;
  }

  /* Remove all animations and transitions for people that prefer not to see them */
  @media (prefers-reduced-motion: reduce) {
    * {
      animation-duration: 0.01ms !important;
      animation-iteration-count: 1 !important;
      transition-duration: 0.01ms !important;
      scroll-behavior: auto !important;
    }
  }
</style>
