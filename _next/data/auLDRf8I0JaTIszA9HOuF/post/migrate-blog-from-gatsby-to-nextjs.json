{"pageProps":{"postContent":{"title":"ブログをGatsbyからNext.jsに移行した","date":"2020-11-28T00:00:00+00:00","slug":"migrate-blog-from-gatsby-to-nextjs","tags":["Blog","JavaScript"],"draft":false,"content":"<p>ブログをHugoからGatsbyに移行してから2年が経過しました <a href=\"https://chooblarin.github.io/post/migrate-blog-from-hugo-to-gatsby\">*</a>。</p>\n<p>そして今回，Gatsbyから <a href=\"https://nextjs.org/\">Next.js</a> への移行を完了しました。</p>\n<h2>動機</h2>\n<p>今回のブログ移行には特に合理的な動機はありません（2年おきに気分でブログを移行している…）。</p>\n<p>GatsbyもNext.jsも静的サイトの開発に適しています。2年前にブログの移行先を検討していたとき，Next.jsはサーバーサイドレンダリング (SSR) のフレームワークでした。そこから時を経て静的サイト作成 (SSG) を推奨するReactフレームワークとして進化したようです。実際にはSSRとSSGのハイブリッドを行うことができて，いくつかのページを静的に生成し，一部のページをサーバーサイドでレンダリングするといったことが可能です。</p>\n<p>2年前に調べた時に比べるとNext.jsの開発者体験はかなり向上しています。Hot code reloadingやデフォルトのTypeScriptサポートなど，フレームワークとしての洗練され具合には惚れ惚れします。</p>\n<h2>移行作業</h2>\n<p>GatsbyからNext.jsへの移行作業はそこまで大変ではありません。Next.js公式の<a href=\"https://nextjs.org/docs/migrating/from-gatsby\">移行ドキュメント</a> を参考にしつつ作業を進めました。</p>\n<p>GatsbyではGraphQL APIでデータを取得して静的ページを生成しています。その際に様々なプラグインを追加することで，Markdownのパースや変換処理，画像の最適化処理，Webサイトのメタデータの生成などが行われる仕組みでした。</p>\n<p>私のサイトでは主に以下のGatsbyプラグインを使用していました。</p>\n<ul>\n<li>gatsby-plugin-manifest</li>\n<li>gatsby-plugin-react-helmet</li>\n<li>gatsby-source-filesystem</li>\n<li>gatsby-transformer-remark</li>\n<li>gatsby-plugin-google-analytics</li>\n</ul>\n<h3>データ取得・変換</h3>\n<p>ブログ記事のデータはMarkdown形式のファイルです。</p>\n<p>Gatsby使用していた gatsby-transformer-remark を踏襲して，<a href=\"https://github.com/remarkjs/remark\">remark</a> を使ったMarkdown処理を採用しました。ソースコードのハイライトには <a href=\"https://highlightjs.org/\"><code>highlight.js</code></a> を使いました。</p>\n<pre><code class=\"hljs language-ts\"><span class=\"hljs-keyword\">import</span> matter <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">\"gray-matter\"</span>;\n<span class=\"hljs-keyword\">import</span> remark <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">\"remark\"</span>;\n<span class=\"hljs-keyword\">import</span> html <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">\"remark-html\"</span>;\n\n<span class=\"hljs-keyword\">const</span> source = fs.readFileSync(filepath, <span class=\"hljs-string\">\"utf-8\"</span>);\n<span class=\"hljs-keyword\">const</span> { content, data } = matter(source);\n\n<span class=\"hljs-keyword\">const</span> markdown = <span class=\"hljs-keyword\">await</span> remark()\n    .use(highlight)\n    .use(html)\n    .process(content)\n    .toString();</code></pre>\n<h3>メタデータやOGP</h3>\n<p>Gatsbyと一緒に使用していた <a href=\"https://github.com/nfl/react-helmet\">react-helmet</a> は <a href=\"https://nextjs.org/docs/api-reference/next/head\">next/head</a> で置き換えることができると公式サイトの<a href=\"https://nextjs.org/docs/migrating/from-gatsby#search-engine-optimization\">移行ガイド</a>でも紹介されています。</p>\n<p>私は<a href=\"https://github.com/garmeeh/next-seo\">next-seo</a> というサードパーティのライブラリで対応しました。</p>\n<h3>Google Analytics</h3>\n<p>Gatsbyではプラグイン (gatsby-plugin-google-analytics) を入れて済ましていましたが，Next.jsでは以下のように実装しました。ついでに analytics.js から gtag.js への移行も行いました。</p>\n<pre><code class=\"hljs language-ts\"><span class=\"hljs-comment\">// _app.tsxのCustom Appコンポーネント</span>\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">App</span>(<span class=\"hljs-params\">{ Component, pageProps }: AppProps</span>) </span>{\n  <span class=\"hljs-keyword\">const</span> router = useRouter();\n\n  React.useEffect(<span class=\"hljs-function\">() =></span> {\n    <span class=\"hljs-keyword\">const</span> <span class=\"hljs-keyword\">type</span> = <span class=\"hljs-string\">\"routeChangeComplete\"</span>;\n    <span class=\"hljs-keyword\">const</span> handler = <span class=\"hljs-function\">(<span class=\"hljs-params\">url: <span class=\"hljs-built_in\">string</span></span>) =></span> pageView(url);\n    router.events.on(<span class=\"hljs-keyword\">type</span>, handler);\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-function\">() =></span> router.events.off(<span class=\"hljs-keyword\">type</span>, handler);\n  }, [router.events]);\n\n...</code></pre>\n<h3>デプロイ</h3>\n<p>このブログはGitHub Pagesでお手軽に運用しているのですが，今更ながらGitHub Actionsでデプロイを自動化しました。\nGitHub PagesにデプロイするActionは山ほどありますが，その中から <a href=\"https://github.com/JamesIves/github-pages-deploy-action\">github-pages-deploy-action</a> を使わせてもらいました。</p>\n<h2>おわりに</h2>\n<p>というわけで本ブログをNext.jsに移行しました。Gatsbyではプラグイン任せだった箇所も自分が好きなようにカスタマイズできるようになったと思います。</p>\n<p>今年はブログを一切更新しないままもうすぐ年末です。来年から本気出す。</p>\n"}},"__N_SSG":true}